{"version":3,"file":"static/js/509.adf55c49.chunk.js","mappings":"kSAiNA,UA3Ma,WACT,IAAMA,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,IAAjB,IACjBG,EACuBH,EADvBG,SAAoBC,GACGJ,EADbK,OACaL,EADHI,cAC1BE,EAA6BN,EAA7BM,cAAcC,EAAeP,EAAfO,WAEhB,IADmBC,EAAAA,EAAAA,OACmBC,EAAAA,EAAAA,UAASN,IAA/C,eAAOO,EAAP,KAAoBC,EAApB,KACA,GAAmCF,EAAAA,EAAAA,UAAS,IAA5C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAA8CN,EAAAA,EAAAA,UAAS,IAAvD,eAAOO,EAAP,KAAwBC,EAAxB,KACA,GAAyBR,EAAAA,EAAAA,WAAS,GAAlC,eAAOS,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAqB,SAACC,GACxBZ,GAAe,kBAAKD,GAAN,cAAoBa,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SACxDC,KAAKC,UAAUlB,KAAeiB,KAAKC,UAAUzB,IAC9CgB,GAAQ,EAEX,EA8BH,OAPEU,EAAAA,EAAAA,YAAU,WAER,OADAT,GAASU,EAAAA,EAAAA,OACD,WACNV,GAASW,EAAAA,EAAAA,MACV,CACF,GAAC,CAACX,KAGD,iBAAKY,UAAU,YAAf,WACA,eAAIA,UAAU,UAAd,SAAwB,kBACxB,kBAAMA,UAAU,eAAeC,SAAU,SAACV,GAAD,OAhChB,SAACA,GAC1BA,EAAEW,iBACFd,GAASW,EAAAA,EAAAA,OACLb,GACFE,GAASe,EAAAA,EAAAA,IAAW,CAAEC,GAAIjC,EAASkC,IAAKC,KAAM5B,KAE5CE,GAEAQ,GACEmB,EAAAA,EAAAA,IAAe,CACbH,GAAIjC,EAASkC,IACbC,KAAM,CAAExB,YAAaA,EAAaF,YAAaA,EAAYI,gBAAgBA,MAKnFH,EAAY,IACZI,EAAmB,IACnBF,EAAe,IACfI,GAAQ,EAET,CAWiDqB,CAAmBjB,EAA1B,EAAzC,WACE,iBAAKS,UAAU,mBAAf,WACE,kBAAOS,IAAI,yBAAX,SAAoC,SAGpC,kBACEf,MAAOhB,EAAYgC,UACnBC,KAAK,OACLX,UAAU,eACVI,GAAG,yBACHQ,SAAU,SAACrB,GAAD,OAAOD,EAAmBC,EAA1B,EACVE,KAAK,kBAGT,iBAAKO,UAAU,mBAAf,WACE,kBAAOS,IAAI,yBAAX,SAAoC,eAGpC,kBACEf,MAAOhB,EAAYmC,SACnBF,KAAK,OACLX,UAAU,eACVI,GAAG,yBACHQ,SAAU,SAACrB,GAAD,OAAOD,EAAmBC,EAA1B,EACVE,KAAK,iBAGT,iBAAKO,UAAU,mBAAf,WACE,kBAAOS,IAAI,yBAAX,SAAoC,uBAGpC,kBACEf,MAAOhB,EAAYoC,SACnBH,KAAK,OACLX,UAAU,eACVI,GAAG,yBACHQ,SAAU,SAACrB,GAAD,OAAOD,EAAmBC,EAA1B,EACVE,KAAK,WACLsB,UAAQ,QAGZ,iBAAKf,UAAU,kBAAf,WACE,kBAAOS,IAAI,yBAAX,SAAoC,cACpC,kBACEf,MAAOhB,EAAYsC,QACnBL,KAAK,OACLX,UAAU,eACVI,GAAG,yBACHQ,SAAU,SAACrB,GAAD,OAAOD,EAAmBC,EAA1B,EACVE,KAAK,gBAGT,iBAAKO,UAAU,kBAAf,WACE,kBAAOS,IAAI,yBAAX,SAAoC,YACpC,kBACEf,MAAOhB,EAAYuC,MACnBN,KAAK,OACLX,UAAU,eACVI,GAAG,yBACHQ,SAAU,SAACrB,GAAD,OAAOD,EAAmBC,EAA1B,EACVE,KAAK,aAIA,OAARtB,QAAQ,IAARA,GAAAA,EAAU+C,YACT,gBAAKlB,UAAU,2BAA2BmB,KAAK,QAA/C,SAAuD,4CAG7C,OAARhD,QAAQ,IAARA,GAAAA,EAAUiD,UACZ,gBAAKpB,UAAU,2BAA2BmB,KAAK,QAA/C,SAAuD,2CAIvD,2BACG,KACD,iBAAKnB,UAAU,kBAAf,WACE,kBAAOS,IAAI,yBAAX,SAAoC,yBAGpC,kBACEE,KAAK,WACLX,UAAU,eACVI,GAAG,yBACHQ,SAAU,SAACrB,GAAD,OAAOR,EAAeQ,EAAEC,OAAOE,MAA/B,EACVD,KAAK,cACLC,MAAOZ,QAGX,iBAAKkB,UAAU,kBAAf,WACE,kBAAOS,IAAI,yBAAX,SAAoC,0BAGpC,kBACEE,KAAK,WACLX,UAAU,eACVI,GAAG,yBACHX,KAAK,cACLC,MAAOd,EACPgC,SAAU,SAACrB,GAAD,OAAOV,EAAYU,EAAEC,OAAOE,MAA5B,QAGd,iBAAKM,UAAU,kBAAf,WACE,kBAAOS,IAAI,yBAAX,SAAoC,4BAGpC,kBACEE,KAAK,WACLX,UAAU,eACVI,GAAG,yBACHV,MAAOV,EACP4B,SAAU,SAACrB,GAAD,OAAON,EAAmBM,EAAEC,OAAOE,MAAnC,EACVD,KAAK,uBAGR,OAACtB,QAAD,IAACA,GAAAA,EAAUkD,SAET,MAFoB,UAAC,IAAD,CAAOC,SAAS,QAAQtB,UAAU,aAAlC,UAA+C,kHACkB,SAAC,KAAD,CAAMuB,GAAI,SAAV,SAAoB,cAI5GhD,IACM,gBAAKyB,UAAU,2BAA2BmB,KAAK,QAA/C,SAAuD,8BAIxD/C,IACC,gBAAK4B,UAAU,0BAA0BmB,KAAK,QAA9C,SACG/C,IAGJE,IACC,gBAAK0B,UAAU,uDAAf,UACA,gBAAKA,UAAU,iBAAiBmB,KAAK,SAArC,UACE,iBAAMnB,UAAU,kBAAhB,SAAkC,oBAK9C,iBAAKA,UAAU,aAAf,WACE,mBAAQW,KAAK,SAASX,UAAU,0BAAhC,SAA0D,aAG1D,mBACEW,KAAK,SACLX,UAAU,0BAFZ,SAIC,wBAOZ,C","sources":["views/pages/profile/User.js"],"sourcesContent":["import React, { useState , useEffect } from \"react\";\nimport { updatePassword, updateUser } from \"../../../redux/userSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Alert from \"@mui/material/Alert\";\nimport { clearUpdate ,setCloseModal} from \"../../../redux/userSlice\";\nimport {useNavigate,Link} from \"react-router-dom\"\nconst User = () => {\n    const user = useSelector((state) => state.user);\n    const { userInfo, isAuth ,  updateErrors,\n      updateLoading,updateShow } = user;\n      const navigate = useNavigate()\n    const [updatedInfo, setUpdatedInfo] = useState(userInfo);\n    const [newPassword, setPassword] = useState(\"\");\n    const [oldPassword, setOldPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [test , setTest] = useState(false)\n    const dispatch = useDispatch();\n    const handleUpdateChange = (e) => {\n        setUpdatedInfo({ ...updatedInfo, [e.target.name]: e.target.value });\n        if(JSON.stringify(updatedInfo)!==JSON.stringify(userInfo)){\n          setTest(true)\n        }\n      };\n      const handleUpdateSubmit = (e) => {\n        e.preventDefault();\n        dispatch(clearUpdate())\n        if (test) {\n          dispatch(updateUser({ id: userInfo._id, data: updatedInfo }));\n        }\n        if (newPassword) {\n  \n            dispatch(\n              updatePassword({\n                id: userInfo._id,\n                data: { oldPassword: oldPassword, newPassword: newPassword,confirmPassword:confirmPassword },\n              })\n            );\n          \n        }\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setOldPassword(\"\");\n        setTest(false)\n\n      };\n      useEffect(()=>{\n        dispatch(setCloseModal())\n        return (()=>{\n          dispatch(clearUpdate())\n        })\n      },[dispatch])\n      \n    return (\n        <div className=\"px-3 py-2\">\n        <h2 className=\"mx-auto\">Infos Compte</h2>\n        <form className=\"profile-form\" onSubmit={(e) => handleUpdateSubmit(e)}>\n          <div className=\"form-group  mt-2\">\n            <label for=\"formGroupExampleInput1\">\n              Nom\n            </label>\n            <input\n              value={updatedInfo.firstName}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput1\"\n              onChange={(e) => handleUpdateChange(e)}\n              name=\"firstName\"\n            />\n          </div>\n          <div className=\"form-group  mt-2\">\n            <label for=\"formGroupExampleInput2\">\n              Prénom\n            </label>\n            <input\n              value={updatedInfo.lastName}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput2\"\n              onChange={(e) => handleUpdateChange(e)}\n              name=\"lastName\"\n            />\n          </div>\n          <div className=\"form-group  mt-2\">\n            <label for=\"formGroupExampleInput3\">\n              Nom d'utilisateur\n            </label>\n            <input\n              value={updatedInfo.username}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput3\"\n              onChange={(e) => handleUpdateChange(e)}\n              name=\"username\"\n              disabled\n            />\n          </div>\n          <div className=\"form-group mt-2\">\n            <label for=\"formGroupExampleInput4\">Adresse </label>\n            <input\n              value={updatedInfo.adresse}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput4\"\n              onChange={(e) => handleUpdateChange(e)}\n              name=\"adresse\"\n            />\n          </div>\n          <div className=\"form-group mt-2\">\n            <label for=\"formGroupExampleInput5\">E-mail</label>\n            <input\n              value={updatedInfo.email}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput5\"\n              onChange={(e) => handleUpdateChange(e)}\n              name=\"email\"\n            />\n          </div>\n\n          {userInfo?.facebookId ? (\n            <div className=\"alert alert-primary mt-2\" role=\"alert\">\n              Vous êtes connectés avec facebook\n            </div>\n          ) : userInfo?.googleId ? (\n            <div className=\"alert alert-primary mt-2\" role=\"alert\">\n              Vous êtes connectés avec google\n            </div>\n          ) : (\n            <div>\n              {\" \"}\n              <div className=\"form-group mt-2\">\n                <label for=\"formGroupExampleInput6\">\n                Mot de passe actuel\n                </label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"formGroupExampleInput6\"\n                  onChange={(e) => setOldPassword(e.target.value)}\n                  name=\"oldPassword\"\n                  value={oldPassword}\n                />\n              </div>\n              <div className=\"form-group mt-2\">\n                <label for=\"formGroupExampleInput7\">\n                  Nouveau Mot de Passe\n                </label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"formGroupExampleInput7\"\n                  name=\"newPassword\"\n                  value={newPassword}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group mt-2\">\n                <label for=\"formGroupExampleInput8\">\n                  Confirmer Mot de Passe\n                </label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"formGroupExampleInput8\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  name=\"confirmPassword\"\n                />\n              </div>\n              {!userInfo?.approved?  <Alert severity=\"error\" className=\"w-100 my-5\">\n          Vous n'avez pas vérifié votre compte. Veuillez compléter la vérification de votre téléphone <Link to={'/phone'}>ici</Link>\n        </Alert>:null}\n            </div>\n          )}\n            { updateShow&& (\n                    <div className=\"alert alert-success mt-2\" role=\"alert\">\n                      utilisateur mis à jour\n                    </div>\n                  )}\n                  {updateErrors && (\n                    <div className=\"alert alert-danger mt-2\" role=\"alert\">\n                      {updateErrors}\n                    </div>\n                  )}\n                  {updateLoading && (\n                    <div className=\"d-flex justify-content-center align-items-center p-4\">\n                    <div className=\"spinner-border\" role=\"status\">\n                      <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                    </div>\n                  )}\n                \n          <div className=\"button-box\">\n            <button type=\"button\" className=\"btn btn-outline-warning\">\n              Annuler\n            </button>\n            <button\n              type=\"submit\"\n              className=\"btn btn-outline-success\"\n              \n            >\n              Enregistrer\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n};\n\nexport default User;"],"names":["user","useSelector","state","userInfo","updateErrors","isAuth","updateLoading","updateShow","useNavigate","useState","updatedInfo","setUpdatedInfo","newPassword","setPassword","oldPassword","setOldPassword","confirmPassword","setConfirmPassword","test","setTest","dispatch","useDispatch","handleUpdateChange","e","target","name","value","JSON","stringify","useEffect","setCloseModal","clearUpdate","className","onSubmit","preventDefault","updateUser","id","_id","data","updatePassword","handleUpdateSubmit","for","firstName","type","onChange","lastName","username","disabled","adresse","email","facebookId","role","googleId","approved","severity","to"],"sourceRoot":""}