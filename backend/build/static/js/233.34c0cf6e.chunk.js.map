{"version":3,"file":"static/js/233.34c0cf6e.chunk.js","mappings":"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","sources":["views/widgets/WidgetsDropdown.js","views/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from \"@coreui/react\";\nimport { getStyle } from \"@coreui/utils\";\nimport { CChartBar, CChartLine } from \"@coreui/react-chartjs\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilArrowBottom, cilArrowTop, cilOptions } from \"@coreui/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst WidgetsDropdown = ({months, users, rooms, transactions, orders}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <Link to=\"/dashboard/users\">\n          <CWidgetStatsA\n            className=\"mb-4\"\n            color=\"primary\"\n            value={\n              <>\n                26K{\" \"}\n                <span className=\"fs-6 fw-normal\">\n                  (-12.4% <CIcon icon={cilArrowBottom} />)\n                </span>\n              </>\n            }\n            title=\"Utilisateurs\"\n            action={\n              <CDropdown alignment=\"end\">\n                <CDropdownToggle\n                  color=\"transparent\"\n                  caret={false}\n                  className=\"p-0\"\n                >\n                  <CIcon\n                    icon={cilOptions}\n                    className=\"text-high-emphasis-inverse\"\n                  />\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem>Action</CDropdownItem>\n                  <CDropdownItem>Another action</CDropdownItem>\n                  <CDropdownItem>Something else here...</CDropdownItem>\n                  <CDropdownItem disabled>Disabled action</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            }\n            chart={\n              <CChartLine\n                className=\"mt-3 mx-3\"\n                style={{ height: \"70px\" }}\n                data={{\n                  labels: months,\n                  datasets: [\n                    {\n                      label: \"Utilisateurs\",\n                      backgroundColor: \"transparent\",\n                      borderColor: \"rgba(255,255,255,.55)\",\n                      pointBackgroundColor: getStyle(\"--cui-primary\"),\n                      data: users,\n                    },\n                  ],\n                }}\n                options={{\n                  plugins: {\n                    legend: {\n                      display: false,\n                    },\n                  },\n                  maintainAspectRatio: false,\n                  scales: {\n                    x: {\n                      grid: {\n                        display: false,\n                        drawBorder: false,\n                      },\n                      ticks: {\n                        display: false,\n                      },\n                    },\n                    y: {\n                      min: 0,\n                      max: 50,\n                      display: false,\n                      grid: {\n                        display: false,\n                      },\n                      ticks: {\n                        display: false,\n                      },\n                    },\n                  },\n                  elements: {\n                    line: {\n                      borderWidth: 1,\n                      tension: 0.4,\n                    },\n                    point: {\n                      radius: 4,\n                      hitRadius: 10,\n                      hoverRadius: 4,\n                    },\n                  },\n                }}\n              />\n            }\n          />\n        </Link>\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <Link to=\"/dashboard/auctionTables\">\n          <CWidgetStatsA\n            className=\"mb-4\"\n            color=\"success\"\n            value={\n              <>\n                $6.200{\" \"}\n                <span className=\"fs-6 fw-normal\">\n                  (40.9% <CIcon icon={cilArrowTop} />)\n                </span>\n              </>\n            }\n            title=\"Enchères\"\n            action={\n              <CDropdown alignment=\"end\">\n                <CDropdownToggle\n                  color=\"transparent\"\n                  caret={false}\n                  className=\"p-0\"\n                >\n                  <CIcon\n                    icon={cilOptions}\n                    className=\"text-high-emphasis-inverse\"\n                  />\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem>Action</CDropdownItem>\n                  <CDropdownItem>Another action</CDropdownItem>\n                  <CDropdownItem>Something else here...</CDropdownItem>\n                  <CDropdownItem disabled>Disabled action</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            }\n            chart={\n              <CChartLine\n                className=\"mt-3 mx-3\"\n                style={{ height: \"70px\" }}\n                data={{\n                  labels:months,\n                  datasets: [\n                    {\n                      label: \"Enchères\",\n                      backgroundColor: \"transparent\",\n                      borderColor: \"rgba(255,255,255,.55)\",\n                      pointBackgroundColor: getStyle(\"--cui-info\"),\n                      data: rooms,\n                    },\n                  ],\n                }}\n                options={{\n                  plugins: {\n                    legend: {\n                      display: false,\n                    },\n                  },\n                  maintainAspectRatio: false,\n                  scales: {\n                    x: {\n                      grid: {\n                        display: false,\n                        drawBorder: false,\n                      },\n                      ticks: {\n                        display: false,\n                      },\n                    },\n                    y: {\n                      min: 0,\n                      max: 50,\n                      display: false,\n                      grid: {\n                        display: false,\n                      },\n                      ticks: {\n                        display: false,\n                      },\n                    },\n                  },\n                  elements: {\n                    line: {\n                      borderWidth: 1,\n                    },\n                    point: {\n                      radius: 4,\n                      hitRadius: 10,\n                      hoverRadius: 4,\n                    },\n                  },\n                }}\n              />\n            }\n          />\n        </Link>\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <Link to=\"/dashboard/ordrs\">\n          <CWidgetStatsA\n            className=\"mb-4\"\n            color=\"warning\"\n            value={\n              <>\n                2.49{\" \"}\n                <span className=\"fs-6 fw-normal\">\n                  (84.7% <CIcon icon={cilArrowTop} />)\n                </span>\n              </>\n            }\n            title=\"Commandes\"\n            action={\n              <CDropdown alignment=\"end\">\n                <CDropdownToggle\n                  color=\"transparent\"\n                  caret={false}\n                  className=\"p-0\"\n                >\n                  <CIcon\n                    icon={cilOptions}\n                    className=\"text-high-emphasis-inverse\"\n                  />\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem>Action</CDropdownItem>\n                  <CDropdownItem>Another action</CDropdownItem>\n                  <CDropdownItem>Something else here...</CDropdownItem>\n                  <CDropdownItem disabled>Disabled action</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            }\n            chart={\n              <CChartLine\n                className=\"mt-3\"\n                style={{ height: \"70px\" }}\n                data={{\n                  labels: months,\n                  datasets: [\n                    {\n                      label: \"commandes\",\n                      backgroundColor: \"rgba(255,255,255,.2)\",\n                      borderColor: \"rgba(255,255,255,.55)\",\n                      data: orders,\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={{\n                  plugins: {\n                    legend: {\n                      display: false,\n                    },\n                  },\n                  maintainAspectRatio: false,\n                  scales: {\n                    x: {\n                      display: false,\n                    },\n                    y: {\n                      display: false,\n                    },\n                  },\n                  elements: {\n                    line: {\n                      borderWidth: 2,\n                      tension: 0.4,\n                    },\n                    point: {\n                      radius: 0,\n                      hitRadius: 10,\n                      hoverRadius: 4,\n                    },\n                  },\n                }}\n              />\n            }\n          />\n        </Link>\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <Link to=\"/dashboard/transactions\">\n          <CWidgetStatsA\n            className=\"mb-4\"\n            color=\"danger\"\n            value={\n              <>\n                44K{\" \"}\n                <span className=\"fs-6 fw-normal\">\n                  (-23.6% <CIcon icon={cilArrowBottom} />)\n                </span>\n              </>\n            }\n            title=\"Transactions\"\n            action={\n              <CDropdown alignment=\"end\">\n                <CDropdownToggle\n                  color=\"transparent\"\n                  caret={false}\n                  className=\"p-0\"\n                >\n                  <CIcon\n                    icon={cilOptions}\n                    className=\"text-high-emphasis-inverse\"\n                  />\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem>Action</CDropdownItem>\n                  <CDropdownItem>Another action</CDropdownItem>\n                  <CDropdownItem>Something else here...</CDropdownItem>\n                  <CDropdownItem disabled>Disabled action</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            }\n            chart={\n              <CChartBar\n                className=\"mt-3 mx-3\"\n                style={{ height: \"70px\" }}\n                data={{\n                  labels: months,\n                  datasets: [\n                    {\n                      label: \"transactions\",\n                      backgroundColor: \"rgba(255,255,255,.2)\",\n                      borderColor: \"rgba(255,255,255,.55)\",\n                      data: transactions,\n                      barPercentage: 0.6,\n                    },\n                  ],\n                }}\n                options={{\n                  maintainAspectRatio: false,\n                  plugins: {\n                    legend: {\n                      display: false,\n                    },\n                  },\n                  scales: {\n                    x: {\n                      grid: {\n                        display: false,\n                        drawTicks: false,\n                      },\n                      ticks: {\n                        display: false,\n                      },\n                    },\n                    y: {\n                      grid: {\n                        display: false,\n                        drawBorder: false,\n                        drawTicks: false,\n                      },\n                      ticks: {\n                        display: false,\n                      },\n                    },\n                  },\n                }}\n              />\n            }\n          />\n        </Link>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default WidgetsDropdown;\n","import React,{useState, useEffect} from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport axios from \"axios\";\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from '../../assets/images/avatars/1.jpg'\nimport avatar2 from '../../assets/images/avatars/2.jpg'\nimport avatar3 from '../../assets/images/avatars/3.jpg'\nimport avatar4 from '../../assets/images/avatars/4.jpg'\nimport avatar5 from '../../assets/images/avatars/5.jpg'\nimport avatar6 from '../../assets/images/avatars/6.jpg'\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\n\nconst Dashboard = () => {\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n  const [users, setUsers] = useState();\n  const [rooms, setRooms] = useState();\n  const [orders, setOrders] = useState();\n  const [transactions, setTransactions] = useState();\n  const [loader, setLoader] = useState(false);\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n \n  const progressExample = [\n    { title: 'Enchère en cours', value: '29.703 Enchères', percent: 40, color: 'success' },\n    { title: 'Enchères en attente', value: '24.093 Enchères', percent: 20, color: 'info' },\n    { title: 'Enchères finies', value: '78.706 Enchères', percent: 60, color: 'warning' },\n    { title: 'Enchères premium', value: '22.123 Enchères', percent: 80, color: 'danger' },\n  ]\n\n  \n  useEffect(() => {\n    {\n      setLoader(true);\n      axios\n        .get(`/participations/getNumberOfDocumentsByMonth`)\n        .then((res) => {\n          setLoader(false);\n          let arr = [];\n          let months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n          ];\n          months.forEach((month) => {\n            let test = res.data.findIndex((elm) => elm.month === month);\n            \n            arr.push(test>=0 ? res.data[test].numberofdocuments : 0);\n          });\n          \n          setTransactions(arr);\n        })\n        .catch((err) => setLoader(false));\n    }\n  }, []);\n  useEffect(() => {\n    {\n      setLoader(true);\n      axios\n        .get(`/orders/getNumberOfDocumentsByMonth`)\n        .then((res) => {\n          setLoader(false);\n          let arr = [];\n          let months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n          ];\n          months.forEach((month) => {\n            let test = res.data.findIndex((elm) => elm.month === month);\n            \n            arr.push(test>=0 ? res.data[test].numberofdocuments : 0);\n          });\n          \n          setOrders(arr);\n        })\n        .catch((err) =>  setLoader(false));\n    }\n  }, []);\n  useEffect(() => {\n    {\n      setLoader(true);\n      axios\n        .get(`/rooms/getNumberOfDocumentsByMonth`)\n        .then((res) => {\n          setLoader(false);\n          let arr = [];\n          let months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n          ];\n          months.forEach((month) => {\n            let test = res.data.findIndex((elm) => elm.month === month);\n            \n            arr.push(test>=0 ? res.data[test].numberofdocuments : 0);\n          });\n          \n          setRooms(arr);\n        })\n        .catch((err) => setLoader(false));\n    }\n  }, []);\n  \n  useEffect(() => {\n    {\n      setLoader(true);\n      axios\n        .get(`/users/getNumberOfDocumentsByMonth`)\n        .then((res) => {\n          setLoader(false);\n          let arr = [];\n          let months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n          ];\n          months.forEach((month) => {\n            let test = res.data.findIndex((elm) => elm.month === month);\n            \n            arr.push(test>=0 ? res.data[test].numberofdocuments : 0);\n          });\n          setUsers(arr);\n        })\n        .catch((err) => setLoader(false));\n    }\n  }, []);\n  return (\n    <>\n      <WidgetsDropdown months={months} users={users} rooms={rooms} orders={orders} transactions={transactions}/>\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: months,\n              datasets: [\n                {\n                  label: 'Utilisateurs',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data:users,\n                  fill: true,\n                },\n                {\n                  label: 'Enchères',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: rooms,\n                  fill: true,\n                },\n                {\n                  label: 'Commandes',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-danger'),\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\n                  borderWidth: 1,\n                  data:orders,\n                  fill: true,\n                },\n                {\n                  label: 'Transactions',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-warning'),\n                  pointHoverBackgroundColor: getStyle('--cui-warning'),\n                  borderWidth: 1,\n                  data:transactions,\n                  fill: true,\n                }\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 4 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n\n     {/*  <WidgetsBrand withCharts /> */}\n\n     {/*  <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n\n              <br />\n\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>User</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\n                    <CTableHeaderCell>Usage</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\n                    <CTableHeaderCell>Activity</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.user.name}</div>\n                        <div className=\"small text-medium-emphasis\">\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\n                          {item.user.registered}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"clearfix\">\n                          <div className=\"float-start\">\n                            <strong>{item.usage.value}%</strong>\n                          </div>\n                          <div className=\"float-end\">\n                            <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                          </div>\n                        </div>\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"small text-medium-emphasis\">Last login</div>\n                        <strong>{item.activity}</strong>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow> */}\n    </>\n  )\n}\n\nexport default Dashboard\n"],"names":["months","users","rooms","transactions","orders","sm","lg","to","className","color","value","icon","cilArrowBottom","title","action","alignment","caret","cilOptions","disabled","chart","style","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","cilArrowTop","fill","barPercentage","drawTicks","useState","setUsers","setRooms","setOrders","setTransactions","setLoader","useEffect","axios","then","res","arr","forEach","month","test","findIndex","elm","push","numberofdocuments","catch","err","id","cilCloudDownload","map","active","marginTop","hexToRgba","pointHoverBackgroundColor","drawOnChartArea","beginAtZero","maxTicksLimit","stepSize","Math","ceil","hoverBorderWidth","xs","cols","md","percent","item","index","thin"],"sourceRoot":""}